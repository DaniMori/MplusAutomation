% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trainlgmm.R
\name{trainLGMM}
\alias{trainLGMM}
\title{Train a variety of latent growth mixture model}
\usage{
trainLGMM(data, idvar, assessmentvar, newdata = FALSE, tuneGrid, cl,
  ncores = 1L)
}
\arguments{
\item{data}{A data frame or data table in long format (i.e., multiple rows per ID).}

\item{idvar}{A character string of the variable name in the dataset
that is the ID variable.}

\item{assessmentvar}{A character string of the variable name in the dataset that
indicates the particular assessment point for each timepoint.}

\item{newdata}{A data frame of new values to use for generating predicted
trajectories by class or \code{FALSE} if no predictions to be made
(the default).}

\item{tuneGrid}{A dataframe or list.  It should have names for
the needed arguments for \code{long2LGMM()}.}
}
\description{
This function iterates through a grid of values to train LGMMs,
optionally using a local or remote cluster.
}
\examples{
\dontrun{
## This example is not run by default because even with very limitted number of
## random starts and iterations, it can take several minutes
setwd(tempdir())

set.seed(1234)
dat <- do.call(rbind, lapply(1:2, function(i) {
  do.call(rbind, lapply(1:200, function(x) {
    d <- data.frame(
      ID = as.integer(paste0(i, x)),
      Class = i,
      Assessment = as.character(1:8),
      t1 = runif(8, 0, 12),
      stringsAsFactors = FALSE)
    u <- rnorm(1, 0, i - .5)
    b1 <- rnorm(1, 0, .02)
    b2 <- rnorm(1, 0, .02)
    d$y <- 5*i + u + rnorm(8, (1 + b1) * d$t1 - ((.3 + b2) * d$t1^2), sd = 1)
    return(d)
  }))
}))

dat$t2 <- dat$t1^2

newdat <- data.frame(
  ID = 11L,
  t1 = seq(0, 12, by = .1),
  t2 = seq(0, 12, by = .1)^2)

tuneGrid <- expand.grid(
  dv = "y",
  timevars = list("t1", c("t1", "t2")),
  starts = "2 1",
  cov = c("independent", "zero"),
  k = 1L:2L,
  processors = 1L, run = TRUE,
  misstrick = TRUE, stringsAsFactors = FALSE)

tuneGrid$title <- paste0(
  c("linear", "quadratic")[sapply(tuneGrid$timevars, length)],
  "_",
  sapply(tuneGrid$cov, function(x) if(nchar(x)==4) substr(x, 1, 4) else substr(x, 1, 3)),
  "_",
  tuneGrid$k)

tuneGrid$base <- paste0(
  c("linear", "quad")[sapply(tuneGrid$timevars, length)],
  "_",
  sapply(tuneGrid$cov, function(x) if(nchar(x)==4) substr(x, 1, 4) else substr(x, 1, 3)))

bigAllRes <- trainLGMM(
  data = dat,
  idvar = "ID",
  assessmentvar = "Assessment",
  newdata = newdat,
  tuneGrid = tuneGrid,
  ncores = 1L)
}
}
